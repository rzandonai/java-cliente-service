# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build



  codeql:
    name: codeql
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: build
      - run: mkdir codeql
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          output: ./codeql
          upload: false
      - run: |
          cat ./codeql/java.sarif
      - name: Publish report to defectdojo
        id: import-scan
        uses: ivanamat/defectdojo-import-scan@v1
        with:
          token: ${{ secrets.DEFECTOJO_TOKEN }}
          defectdojo_url: https://defectdojo.satty.com.br
          engagement: 6
          file: ./codeql/java.sarif
          scan_type: SARIF
          tags: codeql
          close_old_findings: true
          branch_tag: main
          build_id: ${{ github.run_id }}
          commit_hash: ${{ github.sha }}
      - name: Show response of defectdojo
        run: |
          echo ${{ steps.import-scan.outputs.response }}

  tfsec-scan:
    name: tfsec-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Run tfsec
        uses: tfsec/tfsec-sarif-action@9a83b5c3524f825c020e356335855741fd02745f
        with:
          sarif_file: tfsec.json
      - name: cat tfsec
        run: |
          ls
          cat tfsec.json
      - name: Publish report to defectdojo
        id: import-scan
        uses: ivanamat/defectdojo-import-scan@v1
        with:
          token: ${{ secrets.DEFECTOJO_TOKEN }}
          defectdojo_url: https://defectdojo.satty.com.br
          engagement: 6
          file: tfsec.json
          scan_type: SARIF
          tags: tfsec
          close_old_findings: true
          branch_tag: ${{ github.base_ref }}
          build_id: ${{ github.run_id }}
          commit_hash: ${{ github.sha }}
      - name: Show response of defectdojo
        run: |
          set -e
          printf '%s\n' '${{ steps.import-scan.outputs.response }}'